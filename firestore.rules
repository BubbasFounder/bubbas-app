rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ─── Helpers ─────────────────────────────────────
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidTTSPreferences() {
      return !('preferences' in request.resource.data) || (
        (!('ttsRate' in request.resource.data.preferences) ||
          (request.resource.data.preferences.ttsRate is number &&
           request.resource.data.preferences.ttsRate >= 0.5 &&
           request.resource.data.preferences.ttsRate <= 2.0)) &&
        (!('ttsPitch' in request.resource.data.preferences) ||
          (request.resource.data.preferences.ttsPitch is number &&
           request.resource.data.preferences.ttsPitch >= 0.5 &&
           request.resource.data.preferences.ttsPitch <= 1.5)) &&
        (!('ttsAutoplay' in request.resource.data.preferences) ||
          (request.resource.data.preferences.ttsAutoplay is bool))
      );
    }

    function isValidTTSFeatureToggle() {
      return !('features' in request.resource.data) || 
             !('tts' in request.resource.data.features) || 
             (request.resource.data.features.tts is bool);
    }

    // ─── USERS ───────────────────────────────────────
    match /users/{userId} {
      allow read, create, delete: if isUserOwner(userId);
      allow update: if isUserOwner(userId) &&
                    isValidTTSPreferences() &&
                    isValidTTSFeatureToggle();

      match /chats/{chatId} {
        allow read, write: if isUserOwner(userId);
      }

      match /token_usage/{docId} {
        allow read, create: if isUserOwner(userId);
        allow update, delete: if false;
      }

      match /stats/{statsId} {
        allow read, write: if isUserOwner(userId);
      }
    }

    // ─── JOURNALS ────────────────────────────────────
    match /users/{userId}/journal/{entryId}/entries {
      allow read, write, update, delete: if isUserOwner(userId);
    }

    // ─── CHAT MESSAGES (GLOBAL/SHARED) ──────────────
    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if request.auth.uid == resource.data.sender;
    }

    // ─── USER ENCRYPTION KEYS ───────────────────────
    match /userKeys/{userId} {
      allow read, write: if isUserOwner(userId);
    }

    // ─── ADMIN DOCS ─────────────────────────────────
    match /admin/{docId} {
      allow read, write: if false;
    }
  }
}
